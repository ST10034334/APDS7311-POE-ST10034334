# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

orbs:
  newman: postman/newman@1.0.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      # Specify the version you desire here
      # See: https://circleci.com/developer/images/image/cimg/base
      - image: cimg/base:current

    # Add steps to the job
    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  sonarqube:
    working_directory: ~/build
    docker:
      - image: sonarsource/sonar-scanner-cli
    resource_class: small
    steps:
      - checkout  # This step pulls in your repo code
      - run:
          name: Print working directory
          command: pwd
      - run:
          name: List files in current directory
          command: ls -la
      - run:
          name: List files in PART 3 directory recursively
          command: ls -R "PART 3"
      - attach_workspace:
          at: ~/workspace
      - run: | 
          SONAR_BRANCH="${CIRCLE_BRANCH:-master}"
          echo "Sonar branch value is: " $SONAR_BRANCH
          echo "Sonar org value is : "$SONAR_ORG
          sonar-scanner \
          -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
          -Dsonar.organization="$SONAR_ORG" \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.exclusions="**/android/**,**/ios/**,**/node_modules/**" \
          -Dsonar.login="$SONAR_TOKEN" \
          -Dsonar.branch.name="$SONAR_BRANCH" \
          -Dsonar.sources="PART 3/frontend,PART 3/backend"

  postman:
    executor: newman/postman-newman-docker
    steps:
      - checkout
      - run:
          name: List files in api-postman-tests directory recursively
          command: ls -R "api-postman-tests"
      - newman/newman-run:
          collection: api-postman-tests/RenBank API Tests - Customer.postman_collection.json
          environment: api-postman-tests/Customer.postman_environment.json

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - say-hello
      - sonarqube
      - postman
